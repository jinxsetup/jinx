#!/bin/bash

# jinx-deploy-firewall.sh (c) by Frederic Ruget (fred@atlant.is)
# 
# This work is licensed under a
# Creative Commons Attribution 4.0 International License.
# 
# You should have received a copy of the license along with this
# work. If not, see <http://creativecommons.org/licenses/by/4.0/>.


# == Check we are correctly invoked and set env ==============================

if [ "${0}" != "${BASH_SOURCE}" ]; then
  echo "Script $(basename "$BASH_SOURCE") is not meant to be sourced"
  return 1
fi
source "$( dirname "$BASH_SOURCE" )/setenv" ""


# == Main =====================================================================

main () {
    
    # -- Ingestion of command line arguments ----------------------------------

    local _help _verbose _bash
    local _args=()
    while (( "$#" )); do
        case "$1" in
        --bash)
            _bash=
            shift
            ;;
        -h|--help)
            _help=
            shift
            ;;
        -[^-]*|--?*) # unsupported flags
            jinxerror "Error: Unsupported flag $1" >&2
            return 1
            ;;
        *) # preserve positional arguments
            args+=("$1")
            shift
            ;;
        esac
    done
    # Args cheatsheet...
    # args=(a "b c")
    # echo ${args[@]}   --> a b c
    # echo ${#args[@]}  --> 2
    # echo ${!args[@]}  --> 0 1
    # echo ${args[1]}   --> b c
    # for i in ${!args[@]}; do echo -n "${args[$i]}-"; done --> a-b c-

    # -- For debug only... ----------------------------------------------------

    if [ -n "${_bash+set}" ]; then
        bash --init-file <(echo "PS1='debug$ '")
        return 0
    fi

    # -- Online help ----------------------------------------------------------

    if [ -n "${_help+set}" ]; then
        man -P ul /dev/stdin <<< $(cat <<EOF
.TH $(basename "$BASH_SOURCE" | awk '{ print toupper($0) }') \
1 2022-01-22 "Jinx Setup Tools" "JINX SETUP TOOLS"
.SH NAME
.B $(basename "$BASH_SOURCE")
- deploy ufw firewall on local host

.SH OPTIONS

.TP
.B  --help
.TQ
.B  -h
Print a usage message.
EOF
        )
        return 0
    fi

    # -- Main body ------------------------------------------------------------

    jinxh0
    jinxh0 "*** $BASH_SOURCE ***"
    if [ ${#args[@]} != 0 ]; then
        error "$BASH_SOURCE does not expect any arguments"
        return 1
    fi
    
    # == Configure firewall ===================================================
    jinxh1 "Configuring ufw..."
    set -x
    sudo apt-get install --yes ufw
    sudo ufw default deny incoming
    sudo ufw default allow outgoing
    sudo ufw allow in proto tcp from any to 0.0.0.0/0 port 22
    set +x

    jinxnotice
    jinxnotice "Dumping ufw status..."
    echo -n $BLUE
    sudo ufw status
    echo -n $DFLT

    jinxh1
    jinxh1 "Enabling ufw..."
    set -x
    echo y | sudo ufw enable
    set +x

    # == Configure fail2ban ===================================================
    jinxh1
    jinxh1 "Configuring fail2ban..."
    set -x
    sudo apt-get install -y fail2ban
    set +x
}


# == Do it ===================================================================

main "$@"
